<?php

namespace Subapp\Sql\Converter\Common\Condition;

use Subapp\Sql\Ast\Condition\IsNull as IsNullExpression;
use Subapp\Sql\Ast\NodeInterface;
use Subapp\Sql\Converter\AbstractConverter;
use Subapp\Sql\Converter\ProviderInterface;

/**
 * Class IsNull
 * @package Subapp\Sql\Converter\Common\Condition
 */
class IsNull extends AbstractConverter
{
    
    /**
     * @param NodeInterface|IsNullExpression $node
     * @param ProviderInterface                    $renderer
     * @return string
     */
    public function toSql(NodeInterface $node, ProviderInterface $renderer)
    {
        return sprintf('%s IS%sNULL',
            $renderer->toSql($node->getLeft()),
            ($node->isNot() ? ' NOT ' : ' '));
    }

    /**
     * @inheritDoc
     */
    public function toArray(NodeInterface $node, ProviderInterface $renderer)
    {
        return parent::toArray($node, $renderer); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     */
    public function toNode(array $ast, ProviderInterface $renderer)
    {
        parent::toNode($ast, $renderer); // TODO: Change the autogenerated stub
    }


}